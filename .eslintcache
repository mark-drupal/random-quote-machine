[{"/var/www/html/react/random-quote-machine/src/reportWebVitals.js":"1","/var/www/html/react/random-quote-machine/src/App.js":"2","/var/www/html/react/random-quote-machine/src/index.js":"3","/var/www/html/react/random-quote-machine/src/Quote.js":"4","/var/www/html/react/random-quote-machine/src/tweetquote.js":"5"},{"size":362,"mtime":1609160090998,"results":"6","hashOfConfig":"7"},{"size":596,"mtime":1609775239713,"results":"8","hashOfConfig":"7"},{"size":499,"mtime":1609756173520,"results":"9","hashOfConfig":"10"},{"size":4505,"mtime":1609954675658,"results":"11","hashOfConfig":"10"},{"size":2104,"mtime":1609780946795,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1tlwzen",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tbypj2",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/var/www/html/react/random-quote-machine/src/reportWebVitals.js",[],["26","27"],"/var/www/html/react/random-quote-machine/src/App.js",["28"],"/var/www/html/react/random-quote-machine/src/index.js",[],["29","30"],"/var/www/html/react/random-quote-machine/src/Quote.js",["31"],"/var/www/html/react/random-quote-machine/src/tweetquote.js",["32","33"],"/*This is a react component which will allow our random quotes\nmachine the ability tweet quotes.  I seperated this funcationality\nto make things a bit simpler as I guess thats the idea of React*/\n\n/*import statements*/\nimport React from 'react'\nimport './App.css';\n\nclass TweetQuote extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      thequote : this.props.quote,\n     theauthor: this.props.author\n   }\n  }\n\n  render(){\n\n    /*We need to make the ref part of the <a> URL\n    This explains how to do this: https://developer.twitter.com/en/docs/twitter-for-websites/tweet-button/overview\n\n    Essentially we are going to add the quote and the author to the end of this https://twitter.com/intent/tweet?text=\n    But the quote and the author has to be sanitised - all spaces need to replaced with % as per web standards*/\n\n        /*variable to store the url*/\n      let url =\"https://twitter.com/intent/tweet?text=\";\n\n\n\n      /*replace whitespace in quote and author with %*/\n      let sanitisedQuote = this.state.thequote.replace(/\\s/g, \"%20\");\n      let sanitisedAuthor = this.state.theauthor.replace(/\\s/g, \"%20\");\n\n      /*Log the newly sanitised variables for debugging*/\n      console.log(\"----------------------------------------------\");\n      console.log(\"sanitised quote: \" + sanitisedQuote);\n      console.log(\"sanitised quote: \" + sanitisedAuthor);\n      console.log(\"----------------------------------------------\");\n\n      /*add the quote and author onto the end of the url into a new variable (not mutating!)*/\n      let tweetUrl = url +\"'\" +sanitisedQuote + \" '\"+ \"%20%20-%20\" + sanitisedAuthor;\n      console.log(\"----------------------------------------------\");\n      console.log(\"our URL for tweeting will look like this: \" + tweetUrl);\n      console.log(\"----------------------------------------------\");\n\n\n    return(\n      <a id =\"tweet-quote\" className=\"fa fa-twitter fa-lg m-2 p-2 btn btn-large btn-primary\"\n        href= {tweetUrl}\n        target= \"_blank\"\n        data-size=\"large\">\n\n      </a>\n    );\n  }\n}\n\n\n\n\nexport default TweetQuote;\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":11,"column":3,"nodeType":"40","messageId":"41","endLine":14,"endColumn":4},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":66,"column":5,"nodeType":"46","endLine":66,"endColumn":9},{"ruleId":"47","severity":1,"message":"48","line":43,"column":53,"nodeType":"49","messageId":"50","endLine":43,"endColumn":54},{"ruleId":"51","severity":1,"message":"52","line":52,"column":9,"nodeType":"53","endLine":52,"endColumn":25},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["54"],["55"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]